{
  "openapi": "3.1.0",
  "info": {
    "title": "Docta Capital API",
    "description": "API for accessing Docta Capital market data and financial services",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.doctacapital.com.ar"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/v1/auth/token": {
      "post": {
        "description": "Obtain an access token using client credentials for API authentication",
        "tags": ["Authentication"],
        "requestBody": {
          "description": "Client credentials for authentication",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Access token successfully obtained",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid client credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/market_data/historicals/prices/{symbol}": {
      "get": {
        "description": "Retrieve historical price data for a specific financial instrument over a specified date range",
        "tags": ["Market Data"],
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "description": "The ticker symbol or identifier for the financial instrument",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "PAGS"
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "Start date for the historical data in YYYY-MM-DD format",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2025-06-01"
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "End date for the historical data in YYYY-MM-DD format",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2025-06-15"
          },
          {
            "name": "adjusted",
            "in": "query",
            "description": "Whether to return prices adjusted for corporate events",
            "required": true,
            "schema": {
              "type": "boolean"
            },
            "example": false
          }
        ],
        "responses": {
          "200": {
            "description": "Historical price data successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricalPricesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing access token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Symbol not found or no data available",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/market_data/bonds/{symbol}/cashflow": {
      "get": {
        "description": "Retrieve the cashflow schedule for a specific bond, showing all future payments including principal and interest",
        "tags": ["Bonds"],
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "description": "The bond symbol",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AL30"
          },
          {
            "name": "nominal_units",
            "in": "query",
            "description": "Nominal units for the calculation",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "example": 100
          }
        ],
        "responses": {
          "200": {
            "description": "Bond cashflow data successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BondCashflowResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing access token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Bond not found or no cashflow data available",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/market_data/historicals/yield-curve": {
      "get": {
        "description": "Retrieve historical yield curve data for a specific date and subasset class, showing interest rates across different maturities",
        "tags": ["Market Data"],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Specific historical date in YYYY-MM-DD format",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2025-01-02"
          },
          {
            "name": "subasset_class",
            "in": "query",
            "description": "The submarket classification for the yield curve data",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "DOLLAR_LINKED",
                "HARD_DOLLAR",
                "CER",
                "BOPREAL",
                "FIXED_RATE",
                "SUB_SOBERANO",
                "ON",
                "TAMAR",
                "BADLAR",
                "ON_FIXED_RATE",
                "ON_CER",
                "ON_BADLAR",
                "ON_TAMAR",
                "ON_DOLLAR_LINKED",
                "SUB_SOBERANO_FIXED_RATE",
                "SUB_SOBERANO_CER",
                "SUB_SOBERANO_BADLAR",
                "SUB_SOBERANO_TAMAR"
              ]
            },
            "example": "HARD_DOLLAR"
          },
          {
            "name": "specie",
            "in": "query",
            "description": "Currency species. Use 'D' for Dollar (optional)",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["D"]
            },
            "example": "D"
          }
        ],
        "responses": {
          "200": {
            "description": "Historical yield curve data successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/YieldCurveResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing access token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Yield curve data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/plants": {
      "get": {
        "description": "Returns all plants from the system that the user has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new plant in the store",
        "requestBody": {
          "description": "Plant to add to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plant"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/plants/{id}": {
      "delete": {
        "description": "Deletes a single plant based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of plant to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Plant deleted",
            "content": {}
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "webhooks": {
    "/plant/webhook": {
      "post": {
        "description": "Information about a new plant added to the store",
        "requestBody": {
          "description": "Plant added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthRequest": {
        "required": [
          "grant_type",
          "client_id",
          "client_secret",
          "scope"
        ],
        "type": "object",
        "properties": {
          "grant_type": {
            "description": "The OAuth 2.0 grant type. Must be set to client_credentials",
            "type": "string",
            "enum": ["client_credentials"]
          },
          "client_id": {
            "description": "Your client identifier provided by Docta Capital",
            "type": "string"
          },
          "client_secret": {
            "description": "Your client secret provided by Docta Capital",
            "type": "string"
          },
          "scope": {
            "description": "The scope of access requested",
            "type": "string",
            "example": "market_data:read"
          }
        }
      },
      "AuthResponse": {
        "required": [
          "access_token",
          "token_type",
          "expires_in",
          "scope"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "description": "The access token to be used for subsequent API requests",
            "type": "string"
          },
          "token_type": {
            "description": "The type of token. Will be Bearer",
            "type": "string",
            "enum": ["Bearer"]
          },
          "expires_in": {
            "description": "The number of seconds until the token expires",
            "type": "integer"
          },
          "scope": {
            "description": "The scope of access granted by this token",
            "type": "string"
          }
        }
      },
      "HistoricalPricesResponse": {
        "required": [
          "symbol",
          "data",
          "adjusted",
          "from_date",
          "to_date"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "description": "The ticker symbol of the requested instrument",
            "type": "string",
            "example": "PAGS"
          },
          "data": {
            "description": "Array of historical price data points",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceDataPoint"
            }
          },
          "adjusted": {
            "description": "Whether the prices are adjusted for corporate events",
            "type": "boolean",
            "example": false
          },
          "from_date": {
            "description": "The start date of the requested data range",
            "type": "string",
            "format": "date",
            "example": "2025-06-01"
          },
          "to_date": {
            "description": "The end date of the requested data range",
            "type": "string",
            "format": "date",
            "example": "2025-06-15"
          }
        }
      },
      "PriceDataPoint": {
        "required": [
          "date",
          "open",
          "high",
          "low",
          "close",
          "volume"
        ],
        "type": "object",
        "properties": {
          "date": {
            "description": "The date of the price data in YYYY-MM-DD format",
            "type": "string",
            "format": "date",
            "example": "2025-06-01"
          },
          "open": {
            "description": "Opening price for the day",
            "type": "number",
            "format": "float",
            "example": 1250.50
          },
          "high": {
            "description": "Highest price during the day",
            "type": "number",
            "format": "float",
            "example": 1280.75
          },
          "low": {
            "description": "Lowest price during the day",
            "type": "number",
            "format": "float",
            "example": 1245.25
          },
          "close": {
            "description": "Closing price for the day",
            "type": "number",
            "format": "float",
            "example": 1275.00
          },
          "volume": {
            "description": "Trading volume for the day",
            "type": "integer",
            "format": "int64",
            "example": 1500000
          }
        }
      },
      "BondCashflowResponse": {
        "required": [
          "symbol",
          "nominal_units",
          "cashflow",
          "total_interest",
          "total_principal",
          "total_amount"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "description": "The symbol of the requested bond",
            "type": "string",
            "example": "AL30"
          },
          "nominal_units": {
            "description": "The nominal units used for the calculation",
            "type": "integer",
            "example": 100
          },
          "cashflow": {
            "description": "Array of cashflow events for the bond",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CashflowEvent"
            }
          },
          "total_interest": {
            "description": "Total interest payments over the bond's lifetime",
            "type": "number",
            "format": "float",
            "example": 2500.00
          },
          "total_principal": {
            "description": "Total principal payments over the bond's lifetime",
            "type": "number",
            "format": "float",
            "example": 100000.00
          },
          "total_amount": {
            "description": "Total cashflow amount over the bond's lifetime",
            "type": "number",
            "format": "float",
            "example": 102500.00
          }
        }
      },
      "CashflowEvent": {
        "required": [
          "date",
          "type",
          "amount",
          "currency",
          "description"
        ],
        "type": "object",
        "properties": {
          "date": {
            "description": "The payment date in YYYY-MM-DD format",
            "type": "string",
            "format": "date",
            "example": "2025-03-31"
          },
          "type": {
            "description": "The type of payment",
            "type": "string",
            "enum": ["interest", "principal", "amortization"],
            "example": "interest"
          },
          "amount": {
            "description": "The payment amount in the bond's currency",
            "type": "number",
            "format": "float",
            "example": 1250.00
          },
          "currency": {
            "description": "The currency of the payment",
            "type": "string",
            "example": "ARS"
          },
          "description": {
            "description": "Description of the payment",
            "type": "string",
            "example": "Interest Payment"
          }
        }
      },
      "YieldCurveResponse": {
        "required": [
          "date",
          "subasset_class",
          "yield_curve"
        ],
        "type": "object",
        "properties": {
          "date": {
            "description": "The historical date for which the yield curve data was retrieved",
            "type": "string",
            "format": "date",
            "example": "2025-01-02"
          },
          "subasset_class": {
            "description": "The submarket classification used for the query",
            "type": "string",
            "example": "HARD_DOLLAR"
          },
          "specie": {
            "description": "The currency species used for the query",
            "type": "string",
            "example": "D"
          },
          "yield_curve": {
            "description": "Array of yield curve data points with different maturities",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/YieldCurvePoint"
            }
          }
        }
      },
      "YieldCurvePoint": {
        "required": [
          "maturity",
          "yield",
          "currency",
          "maturity_days"
        ],
        "type": "object",
        "properties": {
          "maturity": {
            "description": "The maturity period",
            "type": "string",
            "example": "1Y"
          },
          "yield": {
            "description": "The yield rate for the specific maturity period",
            "type": "number",
            "format": "float",
            "example": 15.8
          },
          "currency": {
            "description": "The currency of the yield rate",
            "type": "string",
            "example": "USD"
          },
          "maturity_days": {
            "description": "The maturity period in days",
            "type": "integer",
            "example": 365
          }
        }
      },
      "Plant": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the plant",
            "type": "string"
          },
          "tag": {
            "description": "Tag to specify the type",
            "type": "string"
          }
        }
      },
      "NewPlant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Plant"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "description": "Identification number of the plant",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Error": {
        "required": [
          "type",
          "title",
          "status",
          "detail",
          "correlation_id"
        ],
        "type": "object",
        "properties": {
          "type": {
            "description": "The error type identifier",
            "type": "string",
            "example": "/errors/authentication-required"
          },
          "title": {
            "description": "A brief description of the error",
            "type": "string",
            "example": "Invalid client credentials"
          },
          "status": {
            "description": "The HTTP status code",
            "type": "integer",
            "example": 401
          },
          "detail": {
            "description": "A detailed description of the error",
            "type": "string",
            "example": "Invalid client credentials"
          },
          "correlation_id": {
            "description": "A unique identifier for tracking this error request",
            "type": "string",
            "format": "uuid",
            "example": "2eb07802-94de-468a-b70f-75a49f3e9516"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}